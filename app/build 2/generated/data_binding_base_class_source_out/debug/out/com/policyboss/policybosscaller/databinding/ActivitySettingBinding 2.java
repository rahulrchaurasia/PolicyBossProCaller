// Generated by view binder compiler. Do not edit!
package com.policyboss.policybosscaller.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.utils.widget.ImageFilterView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.policyboss.policybosscaller.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySettingBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView btnAllowCallLog;

  @NonNull
  public final TextView btnAllowPhoneState;

  @NonNull
  public final AppCompatButton btnContinue;

  @NonNull
  public final CardView cardCallLog;

  @NonNull
  public final CardView cardPhoneState;

  @NonNull
  public final TextView textHome;

  @NonNull
  public final ImageFilterView tvCallLogInfo;

  @NonNull
  public final ImageFilterView tvPhoneStateInfo;

  @NonNull
  public final TextView txtCallLogDtls;

  @NonNull
  public final TextView txtCallLogTitle;

  @NonNull
  public final TextView txtHeaderDtl;

  @NonNull
  public final TextView txtPhoneStateDtls;

  @NonNull
  public final TextView txtPhoneStateTitle;

  private ActivitySettingBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView btnAllowCallLog, @NonNull TextView btnAllowPhoneState,
      @NonNull AppCompatButton btnContinue, @NonNull CardView cardCallLog,
      @NonNull CardView cardPhoneState, @NonNull TextView textHome,
      @NonNull ImageFilterView tvCallLogInfo, @NonNull ImageFilterView tvPhoneStateInfo,
      @NonNull TextView txtCallLogDtls, @NonNull TextView txtCallLogTitle,
      @NonNull TextView txtHeaderDtl, @NonNull TextView txtPhoneStateDtls,
      @NonNull TextView txtPhoneStateTitle) {
    this.rootView = rootView;
    this.btnAllowCallLog = btnAllowCallLog;
    this.btnAllowPhoneState = btnAllowPhoneState;
    this.btnContinue = btnContinue;
    this.cardCallLog = cardCallLog;
    this.cardPhoneState = cardPhoneState;
    this.textHome = textHome;
    this.tvCallLogInfo = tvCallLogInfo;
    this.tvPhoneStateInfo = tvPhoneStateInfo;
    this.txtCallLogDtls = txtCallLogDtls;
    this.txtCallLogTitle = txtCallLogTitle;
    this.txtHeaderDtl = txtHeaderDtl;
    this.txtPhoneStateDtls = txtPhoneStateDtls;
    this.txtPhoneStateTitle = txtPhoneStateTitle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySettingBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySettingBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_setting, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySettingBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnAllowCallLog;
      TextView btnAllowCallLog = ViewBindings.findChildViewById(rootView, id);
      if (btnAllowCallLog == null) {
        break missingId;
      }

      id = R.id.btnAllowPhoneState;
      TextView btnAllowPhoneState = ViewBindings.findChildViewById(rootView, id);
      if (btnAllowPhoneState == null) {
        break missingId;
      }

      id = R.id.btnContinue;
      AppCompatButton btnContinue = ViewBindings.findChildViewById(rootView, id);
      if (btnContinue == null) {
        break missingId;
      }

      id = R.id.cardCallLog;
      CardView cardCallLog = ViewBindings.findChildViewById(rootView, id);
      if (cardCallLog == null) {
        break missingId;
      }

      id = R.id.cardPhoneState;
      CardView cardPhoneState = ViewBindings.findChildViewById(rootView, id);
      if (cardPhoneState == null) {
        break missingId;
      }

      id = R.id.textHome;
      TextView textHome = ViewBindings.findChildViewById(rootView, id);
      if (textHome == null) {
        break missingId;
      }

      id = R.id.tvCallLogInfo;
      ImageFilterView tvCallLogInfo = ViewBindings.findChildViewById(rootView, id);
      if (tvCallLogInfo == null) {
        break missingId;
      }

      id = R.id.tvPhoneStateInfo;
      ImageFilterView tvPhoneStateInfo = ViewBindings.findChildViewById(rootView, id);
      if (tvPhoneStateInfo == null) {
        break missingId;
      }

      id = R.id.txtCallLogDtls;
      TextView txtCallLogDtls = ViewBindings.findChildViewById(rootView, id);
      if (txtCallLogDtls == null) {
        break missingId;
      }

      id = R.id.txtCallLogTitle;
      TextView txtCallLogTitle = ViewBindings.findChildViewById(rootView, id);
      if (txtCallLogTitle == null) {
        break missingId;
      }

      id = R.id.txtHeaderDtl;
      TextView txtHeaderDtl = ViewBindings.findChildViewById(rootView, id);
      if (txtHeaderDtl == null) {
        break missingId;
      }

      id = R.id.txtPhoneStateDtls;
      TextView txtPhoneStateDtls = ViewBindings.findChildViewById(rootView, id);
      if (txtPhoneStateDtls == null) {
        break missingId;
      }

      id = R.id.txtPhoneStateTitle;
      TextView txtPhoneStateTitle = ViewBindings.findChildViewById(rootView, id);
      if (txtPhoneStateTitle == null) {
        break missingId;
      }

      return new ActivitySettingBinding((ConstraintLayout) rootView, btnAllowCallLog,
          btnAllowPhoneState, btnContinue, cardCallLog, cardPhoneState, textHome, tvCallLogInfo,
          tvPhoneStateInfo, txtCallLogDtls, txtCallLogTitle, txtHeaderDtl, txtPhoneStateDtls,
          txtPhoneStateTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
